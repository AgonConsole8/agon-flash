Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED11-Oct-23     16:14:48     page:   1


PC     Object              I  Line    Source 
                           A     1    ;
                           A     2    ; Title:	crc32
                           A     3    ; Author:	Leigh Brown
                           A     4    ; Created:	26/05/2023
                           A     5    ; Last Updated:	26/05/2023
                           A     6    
                           A     7    ; Modinfo
                           A     8    ;
                           A     9    
                           A    10    		XDEF	_crc32
                           A    11    
                           A    12    		.ASSUME ADL = 1
                           A    13    		SEGMENT		CODE
                           A    14    
                           A    15    ; UINT32 crc32(const char *s, UINT24 len);
                           A    16    ;              IX+6           IX+9
                           A    17    ; NB: We use local stack storage without alloca
                           A    18    ;     That's okay, /as long as/ we don't call a
                           A    19    
                           A    20    		SCOPE
                           A    21    
0B0BE2                     A    22    _crc32:
                           A    23    		; Function prologue
0B0BE2 DDE5                A    24    		PUSH		IX
0B0BE4 DD210000 00         A    25    		LD		IX,0
0B0BE9 DD39                A    26    		ADD		IX,SP
                           A    27    
                           A    28    		; Initialise output to 0xFFFFFFFF
0B0BEB D9                  A    29    		EXX
0B0BEC 16FF                A    30    		LD		D,0FFh
0B0BEE 5A                  A    31    		LD		E,D
0B0BEF 42                  A    32    		LD		B,D
0B0BF0 4A                  A    33    		LD		C,D
0B0BF1 D9                  A    34    		EXX
                           A    35    
                           A    36    		; Use DE to store pointer to current by
0B0BF2 DD1706              A    37    		LD		DE,(IX+6)
                           A    38    
                           A    39    		; Use HL to count bytes remaining
0B0BF5 DD2709              A    40    		LD		HL,(IX+9)
                           A    41    
                           A    42    		; Use BC to hold constant `1'
0B0BF8 01010000            A    43    		LD		BC,1
                           A    44    
                           A    45    		; And we are off to the races...
0B0BFC 1A                  A    46    $loop:		LD		A,(DE)
0B0BFD 13                  A    47    		INC		DE
                           A    48    		
                           A    49    		; Calculate offset into lookup table
0B0BFE D9                  A    50    		EXX
                           A    51    
0B0BFF A9                  A    52    		XOR		C
0B0C00 21 00 C6 02         A    53    		LD		HL,crc32_lookup_table >> 2
0B0C04 6F                  A    54    		LD		L,A
0B0C05 29                  A    55    		ADD		HL,HL
0B0C06 29                  A    56    		ADD		HL,HL
                           A    57    
0B0C07 78                  A    58    		LD		A,B
0B0C08 AE                  A    59    		XOR		(HL)
0B0C09 23                  A    60    		INC		HL
0B0C0A 4F                  A    61    		LD		C,A
                           A    62    
0B0C0B 7B                  A    63    		LD		A,E
0B0C0C AE                  A    64    		XOR		(HL)
0B0C0D 23                  A    65    		INC		HL
0B0C0E 47                  A    66    		LD		B,A
                           A    67    
0B0C0F 7A                  A    68    		LD		A,D
0B0C10 AE                  A    69    		XOR		(HL)
0B0C11 23                  A    70    		INC		HL
0B0C12 5F                  A    71    		LD		E,A
                           A    72    
0B0C13 56                  A    73    		LD		D,(HL)
                           A    74    
0B0C14 D9                  A    75    		EXX
                           A    76    
                           A    77    		; Decrement count and loop if not zero
0B0C15 B7                  A    78    		OR		A,A
0B0C16 ED42                A    79    		SBC		HL,BC
0B0C18 20 E2               A    80    		JR		NZ,$loop
                           A    81    		
                           A    82    		; Invert all bits and move to E:HL to r
                           A    83    		; in other words... E:HL := ~(DE:BC)
                           A    84    		; Slightly tricky as cannot directly ac
0B0C1A D9                  A    85    		EXX
                           A    86    
                           A    87    		; Move ~E into H, ~B into L
0B0C1B 7B                  A    88    		LD		A,E
0B0C1C 2F                  A    89    		CPL
0B0C1D 67                  A    90    		LD		H,A
0B0C1E 78                  A    91    		LD		A,B
0B0C1F 2F                  A    92    		CPL
0B0C20 6F                  A    93    		LD		L,A
                           A    94    
                           A    95    		; Shift them into top 16-bits
0B0C21 29                  A    96    		ADD		HL,HL
0B0C22 29                  A    97    		ADD		HL,HL
0B0C23 29                  A    98    		ADD		HL,HL
0B0C24 29                  A    99    		ADD		HL,HL
0B0C25 29                  A   100    		ADD		HL,HL
0B0C26 29                  A   101    		ADD		HL,HL
0B0C27 29                  A   102    		ADD		HL,HL
0B0C28 29                  A   103    		ADD		HL,HL
                           A   104    
                           A   105    		; Move ~C into low 8-bits of HL
0B0C29 79                  A   106    		LD	A,C
0B0C2A 2F                  A   107    		CPL
0B0C2B 6F                  A   108    		LD	L,A
                           A   109    
                           A   110    		; Finally, move ~D to E, complementing 
0B0C2C 7A                  A   111    		LD	A,D
0B0C2D 2F                  A   112    		CPL
0B0C2E 5F                  A   113    		LD	E,A
                           A   114    
                           A   115    		; Function epilogue
0B0C2F DDE1                A   116    		POP	IX
0B0C31 C9                  A   117    		RET
                           A   118    
                           A   119    		SEGMENT	DATA
                           A   120    
                           A   121    		; The crc32 routine is optimised in suc
                           A   122    		; the following table to be aligned on 
                           A   123    
                           A   124    		ALIGN	1024
0B1800                     A   125    crc32_lookup_table:
0B1800 00000000 96300777   A   126    		DL	%00000000, %77073096, %ee0e612c, %9
0B1808 2C610EEE BA510999 
0B1810 19C46D07 8FF46A70   A   127    		DL	%076dc419, %706af48f, %e963a535, %9
0B1818 35A563E9 A395649E 
0B1820 3288DB0E A4B8DC79   A   128    		DL	%0edb8832, %79dcb8a4, %e0d5e91e, %9
0B1828 1EE9D5E0 88D9D297 
0B1830 2B4CB609 BD7CB17E   A   129    		DL	%09b64c2b, %7eb17cbd, %e7b82d07, %9
0B1838 072DB8E7 911DBF90 
0B1840 6410B71D F220B06A   A   130    		DL	%1db71064, %6ab020f2, %f3b97148, %8
0B1848 4871B9F3 DE41BE84 
0B1850 7DD4DA1A EBE4DD6D   A   131    		DL	%1adad47d, %6ddde4eb, %f4d4b551, %8
0B1858 51B5D4F4 C785D383 
0B1860 56986C13 C0A86B64   A   132    		DL	%136c9856, %646ba8c0, %fd62f97a, %8
0B1868 7AF962FD ECC9658A 
0B1870 4F5C0114 D96C0663   A   133    		DL	%14015c4f, %63066cd9, %fa0f3d63, %8
0B1878 633D0FFA F50D088D 
0B1880 C8206E3B 5E10694C   A   134    		DL	%3b6e20c8, %4c69105e, %d56041e4, %a
0B1888 E44160D5 727167A2 
0B1890 D1E4033C 47D4044B   A   135    		DL	%3c03e4d1, %4b04d447, %d20d85fd, %a
0B1898 FD850DD2 6BB50AA5 
0B18A0 FAA8B535 6C98B242   A   136    		DL	%35b5a8fa, %42b2986c, %dbbbc9d6, %a
0B18A8 D6C9BBDB 40F9BCAC 
0B18B0 E36CD832 755CDF45   A   137    		DL	%32d86ce3, %45df5c75, %dcd60dcf, %a
0B18B8 CF0DD6DC 593DD1AB 
0B18C0 AC30D926 3A00DE51   A   138    		DL	%26d930ac, %51de003a, %c8d75180, %b
0B18C8 8051D7C8 1661D0BF 
0B18D0 B5F4B421 23C4B356   A   139    		DL	%21b4f4b5, %56b3c423, %cfba9599, %b
0B18D8 9995BACF 0FA5BDB8 
0B18E0 9EB80228 0888055F   A   140    		DL	%2802b89e, %5f058808, %c60cd9b2, %b
0B18E8 B2D90CC6 24E90BB1 
0B18F0 877C6F2F 114C6858   A   141    		DL	%2f6f7c87, %58684c11, %c1611dab, %b
0B18F8 AB1D61C1 3D2D66B6 
0B1900 9041DC76 0671DB01   A   142    		DL	%76dc4190, %01db7106, %98d220bc, %e
0B1908 BC20D298 2A10D5EF 
0B1910 8985B171 1FB5B606   A   143    		DL	%71b18589, %06b6b51f, %9fbfe4a5, %e
0B1918 A5E4BF9F 33D4B8E8 
0B1920 A2C90778 34F9000F   A   144    		DL	%7807c9a2, %0f00f934, %9609a88e, %e
0B1928 8EA80996 18980EE1 
0B1930 BB0D6A7F 2D3D6D08   A   145    		DL	%7f6a0dbb, %086d3d2d, %91646c97, %e
0B1938 976C6491 015C63E6 
0B1940 F4516B6B 62616C1C   A   146    		DL	%6b6b51f4, %1c6c6162, %856530d8, %f
0B1948 D8306585 4E0062F2 
0B1950 ED95066C 7BA5011B   A   147    		DL	%6c0695ed, %1b01a57b, %8208f4c1, %f
0B1958 C1F40882 57C40FF5 
0B1960 C6D9B065 50E9B712   A   148    		DL	%65b0d9c6, %12b7e950, %8bbeb8ea, %f
0B1968 EAB8BE8B 7C88B9FC 
0B1970 DF1DDD62 492DDA15   A   149    		DL	%62dd1ddf, %15da2d49, %8cd37cf3, %f
0B1978 F37CD38C 654CD4FB 
0B1980 5861B24D CE51B53A   A   150    		DL	%4db26158, %3ab551ce, %a3bc0074, %d
0B1988 7400BCA3 E230BBD4 
0B1990 41A5DF4A D795D83D   A   151    		DL	%4adfa541, %3dd895d7, %a4d1c46d, %d
0B1998 6DC4D1A4 FBF4D6D3 
0B19A0 6AE96943 FCD96E34   A   152    		DL	%4369e96a, %346ed9fc, %ad678846, %d
0B19A8 468867AD D0B860DA 
0B19B0 732D0444 E51D0333   A   153    		DL	%44042d73, %33031de5, %aa0a4c5f, %d
0B19B8 5F4C0AAA C97C0DDD 
0B19C0 3C710550 AA410227   A   154    		DL	%5005713c, %270241aa, %be0b1010, %c
0B19C8 10100BBE 86200CC9 
0B19D0 25B56857 B3856F20   A   155    		DL	%5768b525, %206f85b3, %b966d409, %c
0B19D8 09D466B9 9FE461CE 
0B19E0 0EF9DE5E 98C9D929   A   156    		DL	%5edef90e, %29d9c998, %b0d09822, %c
0B19E8 2298D0B0 B4A8D7C7 
0B19F0 173DB359 810DB42E   A   157    		DL	%59b33d17, %2eb40d81, %b7bd5c3b, %c
0B19F8 3B5CBDB7 AD6CBAC0 
0B1A00 2083B8ED B6B3BF9A   A   158    		DL	%edb88320, %9abfb3b6, %03b6e20c, %7
0B1A08 0CE2B603 9AD2B174 
0B1A10 3947D5EA AF77D29D   A   159    		DL	%ead54739, %9dd277af, %04db2615, %7
0B1A18 1526DB04 8316DC73 
0B1A20 120B63E3 843B6494   A   160    		DL	%e3630b12, %94643b84, %0d6d6a3e, %7
0B1A28 3E6A6D0D A85A6A7A 
0B1A30 0BCF0EE4 9DFF0993   A   161    		DL	%e40ecf0b, %9309ff9d, %0a00ae27, %7
0B1A38 27AE000A B19E077D 
0B1A40 44930FF0 D2A30887   A   162    		DL	%f00f9344, %8708a3d2, %1e01f268, %6
0B1A48 68F2011E FEC20669 
0B1A50 5D5762F7 CB676580   A   163    		DL	%f762575d, %806567cb, %196c3671, %6
0B1A58 71366C19 E7066B6E 
0B1A60 761BD4FE E02BD389   A   164    		DL	%fed41b76, %89d32be0, %10da7a5a, %6
0B1A68 5A7ADA10 CC4ADD67 
0B1A70 6FDFB9F9 F9EFBE8E   A   165    		DL	%f9b9df6f, %8ebeeff9, %17b7be43, %6
0B1A78 43BEB717 D58EB060 
0B1A80 E8A3D6D6 7E93D1A1   A   166    		DL	%d6d6a3e8, %a1d1937e, %38d8c2c4, %4
0B1A88 C4C2D838 52F2DF4F 
0B1A90 F167BBD1 6757BCA6   A   167    		DL	%d1bb67f1, %a6bc5767, %3fb506dd, %4
0B1A98 DD06B53F 4B36B248 
0B1AA0 DA2B0DD8 4C1B0AAF   A   168    		DL	%d80d2bda, %af0a1b4c, %36034af6, %4
0B1AA8 F64A0336 607A0441 
0B1AB0 C3EF60DF 55DF67A8   A   169    		DL	%df60efc3, %a867df55, %316e8eef, %4
0B1AB8 EF8E6E31 79BE6946 
0B1AC0 8CB361CB 1A8366BC   A   170    		DL	%cb61b38c, %bc66831a, %256fd2a0, %5
0B1AC8 A0D26F25 36E26852 
0B1AD0 95770CCC 03470BBB   A   171    		DL	%cc0c7795, %bb0b4703, %220216b9, %5
0B1AD8 B9160222 2F260555 
0B1AE0 BE3BBAC5 280BBDB2   A   172    		DL	%c5ba3bbe, %b2bd0b28, %2bb45a92, %5
0B1AE8 925AB42B 046AB35C 
0B1AF0 A7FFD7C2 31CFD0B5   A   173    		DL	%c2d7ffa7, %b5d0cf31, %2cd99e8b, %5
0B1AF8 8B9ED92C 1DAEDE5B 
0B1B00 B0C2649B 26F263EC   A   174    		DL	%9b64c2b0, %ec63f226, %756aa39c, %0
0B1B08 9CA36A75 0A936D02 
0B1B10 A906099C 3F360EEB   A   175    		DL	%9c0906a9, %eb0e363f, %72076785, %0
0B1B18 85670772 13570005 
0B1B20 824ABF95 147AB8E2   A   176    		DL	%95bf4a82, %e2b87a14, %7bb12bae, %0
0B1B28 AE2BB17B 381BB60C 
0B1B30 9B8ED292 0DBED5E5   A   177    		DL	%92d28e9b, %e5d5be0d, %7cdcefb7, %0
0B1B38 B7EFDC7C 21DFDB0B 
0B1B40 D4D2D386 42E2D4F1   A   178    		DL	%86d3d2d4, %f1d4e242, %68ddb3f8, %1
0B1B48 F8B3DD68 6E83DA1F 
0B1B50 CD16BE81 5B26B9F6   A   179    		DL	%81be16cd, %f6b9265b, %6fb077e1, %1
0B1B58 E177B06F 7747B718 
0B1B60 E65A0888 706A0FFF   A   180    		DL	%88085ae6, %ff0f6a70, %66063bca, %1
0B1B68 CA3B0666 5C0B0111 
0B1B70 FF9E658F 69AE62F8   A   181    		DL	%8f659eff, %f862ae69, %616bffd3, %1
0B1B78 D3FF6B61 45CF6C16 
0B1B80 78E20AA0 EED20DD7   A   182    		DL	%a00ae278, %d70dd2ee, %4e048354, %3
0B1B88 5483044E C2B30339 
0B1B90 612667A7 F71660D0   A   183    		DL	%a7672661, %d06016f7, %4969474d, %3
0B1B98 4D476949 DB776E3E 
0B1BA0 4A6AD1AE DC5AD6D9   A   184    		DL	%aed16a4a, %d9d65adc, %40df0b66, %3
0B1BA8 660BDF40 F03BD837 
0B1BB0 53AEBCA9 C59EBBDE   A   185    		DL	%a9bcae53, %debb9ec5, %47b2cf7f, %3
0B1BB8 7FCFB247 E9FFB530 
0B1BC0 1CF2BDBD 8AC2BACA   A   186    		DL	%bdbdf21c, %cabac28a, %53b39330, %2
0B1BC8 3093B353 A6A3B424 
0B1BD0 0536D0BA 9306D7CD   A   187    		DL	%bad03605, %cdd70693, %54de5729, %2
0B1BD8 2957DE54 BF67D923 
0B1BE0 2E7A66B3 B84A61C4   A   188    		DL	%b3667a2e, %c4614ab8, %5d681b02, %2
0B1BE8 021B685D 942B6F2A 
0B1BF0 37BE0BB4 A18E0CC3   A   189    		DL	%b40bbe37, %c30c8ea1, %5a05df1b, %2
0B1BF8 1BDF055A 8DEF022D 
                           A   190    
                           A   191    		END


Errors: 0
Warnings: 0
Lines Assembled: 192
