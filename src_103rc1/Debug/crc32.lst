Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED20-Mar-23     11:56:16     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\crc32.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",6
                           A     9    .DEFINE "quot"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 4
                           A    13    .ENDEF
                           A    14    .DEFINE "rem"
                           A    15    .VALUE 3
                           A    16    .CLASS 8
                           A    17    .TYPE 4
                           A    18    .ENDEF
                           A    19    .ENDREC "NONAME0"
                           A    20    .BEGREC "NONAME1",8
                           A    21    .DEFINE "quot"
                           A    22    .VALUE 0
                           A    23    .CLASS 8
                           A    24    .TYPE 5
                           A    25    .ENDEF
                           A    26    .DEFINE "rem"
                           A    27    .VALUE 4
                           A    28    .CLASS 8
                           A    29    .TYPE 5
                           A    30    .ENDEF
                           A    31    .ENDREC "NONAME1"
                           A    32    .BEGREC "header",6
                           A    33    .DEFINE "s"
                           A    34    .VALUE 0
                           A    35    .CLASS 11
                           A    36    .TAG "NONAME2"
                           A    37    .TYPE 8
                           A    38    .ENDEF
                           A    39    .DEFINE "x"
                           A    40    .VALUE 0
                           A    41    .CLASS 11
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .ENDREC "header"
                           A    45    .BEGREC "NONAME2",6
                           A    46    .DEFINE "ptr"
                           A    47    .VALUE 0
                           A    48    .CLASS 8
                           A    49    .TAG "header"
                           A    50    .TYPE 40
                           A    51    .ENDEF
                           A    52    .DEFINE "size"
                           A    53    .VALUE 3
                           A    54    .CLASS 8
                           A    55    .TYPE 14
                           A    56    .ENDEF
                           A    57    .ENDREC "NONAME2"
                           A    58    ;    1	/*
                           A    59    ;    2	 * Title:			CRC32 functions
                           A    60    ;    3	 * Author:			Jeroen Venema
                           A    61    ;    4	 * Created:			17/12/2022
                           A    62    ;    5	 * Last Updated:	17/12/2022
                           A    63    ;    6	 * 
                           A    64    ;    7	 * Modinfo:
                           A    65    ;    8	 * 17/12/2022:		Initial version
                           A    66    ;    9	 */
                           A    67    ;   10	
                           A    68    ;   11	#include <defines.h>
                           A    69    ;   12	#include <ctype.h>
                           A    70    ;   13	#include <stdlib.h>
                           A    71    ;   14	#include <ez80.h>
                           A    72    ;   15	#include "crc32.h"
                           A    73    ;   16	
                           A    74    ;   17	extern int errno;
                           A    75    ;   18	
                           A    76    ;   19	/*
                           A    77    ;   20	 * Convert a string to a UINT32 integer
                           A    78    ;   21	 *
                           A    79    ;   22	 * Ignores `locale' stuff.  Assumes tha
                           A    80    ;   23	 * alphabets and digits are each contig
                           A    81    ;   24	 */
                           A    82    ;   25	 
                           A    83    ;   26	UINT32
                           A    84    ;   27	strtoll(const char *nptr)
                           A    85    ;   28	{
0407E1                     A    86    _strtoll:
                           A    87    .DEFINE "_strtoll"
                           A    88    
                           A    89    .VALUE _strtoll
                           A    90    
                           A    91    .CLASS 2
                           A    92    
                           A    93    .TYPE 79
                           A    94    
                           A    95    .ENDEF
                           A    96    
                           A    97    .BEGFUNC "strtoll",28,"_strtoll"
                           A    98    
                           A    99    .LINE 28
                           A   100    
                           A   101    .DEFINE "nptr"
                           A   102    
                           A   103    .CLASS 65
                           A   104    
                           A   105    .VALUE 6
                           A   106    
                           A   107    .TYPE 194
                           A   108    
                           A   109    .ENDEF
                           A   110    
                           A   111    .DEFINE "c"
                           A   112    
                           A   113    .CLASS 65
                           A   114    
                           A   115    .VALUE -3
                           A   116    
                           A   117    .TYPE 4
                           A   118    
                           A   119    .ENDEF
                           A   120    
                           A   121    .DEFINE "s"
                           A   122    
                           A   123    .CLASS 65
                           A   124    
                           A   125    .VALUE -6
                           A   126    
                           A   127    .TYPE 194
                           A   128    
                           A   129    .ENDEF
                           A   130    
                           A   131    .DEFINE "acc"
                           A   132    
                           A   133    .CLASS 65
                           A   134    
                           A   135    .VALUE -10
                           A   136    
                           A   137    .TYPE 15
                           A   138    
                           A   139    .ENDEF
                           A   140    
                           A   141    .DEFINE "digits"
                           A   142    
                           A   143    .CLASS 65
                           A   144    
                           A   145    .VALUE -13
                           A   146    
                           A   147    .TYPE 4
                           A   148    
                           A   149    .ENDEF
                           A   150    
0407E1 DDE5                A   151    	PUSH	IX
0407E3 DD210000 00         A   152    	LD	IX,0
0407E8 DD39                A   153    	ADD	IX,SP
0407EA ED22E9              A   154    	LEA	HL,IX+%FFFFFFE9
0407ED F9                  A   155    	LD	SP,HL
                           A   156    ;   29		const char *s = nptr;
                           A   157    .LINE 29
                           A   158    
0407EE DD0706              A   159    	LD	BC,(IX+%6)
0407F1 DD0FFA              A   160    	LD	(IX+%FFFFFFFA),BC
                           A   161    ;   30		UINT32 acc;
                           A   162    ;   31		int c;
                           A   163    ;   32		int digits = 0;
                           A   164    .LINE 32
                           A   165    
0407F4 01000000            A   166    	LD	BC,0
0407F8 DD0FF3              A   167    	LD	(IX+%FFFFFFF3),BC
                           A   168    ;   33	
                           A   169    ;   34		do {
0407FB                     A   170    L_1:
                           A   171    .LINE 34
                           A   172    
                           A   173    ;   35			c = *s++;
                           A   174    .LINE 35
                           A   175    
0407FB DD07FA              A   176    	LD	BC,(IX+%FFFFFFFA)
0407FE DD0FED              A   177    	LD	(IX+%FFFFFFED),BC
040801 C5E1                A   178    	LD	HL,BC
040803 7E                  A   179    	LD	A,(HL)
040804 47                  A   180    	LD	B,A
040805 17ED62              A   181    	SEXT	HL
040808 68                  A   182    	LD	L,B
040809 DD2FFD              A   183    	LD	(IX+%FFFFFFFD),HL
04080C DD07FA              A   184    	LD	BC,(IX+%FFFFFFFA)
04080F 03                  A   185    	INC	BC
040810 DD0FFA              A   186    	LD	(IX+%FFFFFFFA),BC
                           A   187    ;   36		} while (isspace(c));
                           A   188    .LINE 36
                           A   189    
040813 DD07FD              A   190    	LD	BC,(IX+%FFFFFFFD)
040816 C5                  A   191    	PUSH	BC
040817 DD77E9              A   192    	LD	(IX+%FFFFFFE9),A
04081A CD 0B 11 04         A   193    	CALL	_isspace
04081E DD7EE9              A   194    	LD	A,(IX+%FFFFFFE9)
040821 C1                  A   195    	POP	BC
040822 CD B2 10 04         A   196    	CALL	__icmpzero
040826 20 D3               A   197    	JR	NZ,L_1
                           A   198    ;   37		if (
                           A   199    ;   38		    c == '0' && (*s == 'x' || *s ==
                           A   200    .LINE 38
                           A   201    
040828 01300000            A   202    	LD	BC,48
04082C DD27FD              A   203    	LD	HL,(IX+%FFFFFFFD)
04082F B7                  A   204    	OR	A,A
040830 ED42                A   205    	SBC	HL,BC
040832 20 3A               A   206    	JR	NZ,L_22
040834 DD27FA              A   207    	LD	HL,(IX+%FFFFFFFA)
040837 7E                  A   208    	LD	A,(HL)
040838 47                  A   209    	LD	B,A
040839 17ED62              A   210    	SEXT	HL
04083C 68                  A   211    	LD	L,B
04083D 01780000            A   212    	LD	BC,120
040841 B7                  A   213    	OR	A,A
040842 ED42                A   214    	SBC	HL,BC
040844 28 12               A   215    	JR	Z,L_5
040846 DD27FA              A   216    	LD	HL,(IX+%FFFFFFFA)
040849 7E                  A   217    	LD	A,(HL)
04084A 47                  A   218    	LD	B,A
04084B 17ED62              A   219    	SEXT	HL
04084E 68                  A   220    	LD	L,B
04084F 01580000            A   221    	LD	BC,88
040853 B7                  A   222    	OR	A,A
040854 ED42                A   223    	SBC	HL,BC
040856 20 16               A   224    	JR	NZ,L_22
040858                     A   225    L_5:
                           A   226    ;   39			c = s[1];
                           A   227    .LINE 39
                           A   228    
040858 DD27FA              A   229    	LD	HL,(IX+%FFFFFFFA)
04085B 23                  A   230    	INC	HL
04085C 7E                  A   231    	LD	A,(HL)
04085D 47                  A   232    	LD	B,A
04085E 17ED62              A   233    	SEXT	HL
040861 68                  A   234    	LD	L,B
040862 DD2FFD              A   235    	LD	(IX+%FFFFFFFD),HL
                           A   236    ;   40			s += 2;
                           A   237    .LINE 40
                           A   238    
040865 DD31FA              A   239    	LD	IY,(IX+%FFFFFFFA)
040868 ED3302              A   240    	LEA	IY,IY+%2
04086B DD3EFA              A   241    	LD	(IX+%FFFFFFFA),IY
                           A   242    ;   41		}
04086E                     A   243    L_22:
                           A   244    .LINE 41
                           A   245    
                           A   246    ;   42	
                           A   247    ;   43		for (acc = 0;; c = *s++) {
                           A   248    .LINE 43
                           A   249    
04086E 01000000            A   250    	LD	BC,0
040872 1600                A   251    	LD	D,%0
040874 DD0FF6              A   252    	LD	(IX+%FFFFFFF6),BC
040877 DD72F9              A   253    	LD	(IX+%FFFFFFF9),D
04087A                     A   254    L_20:
                           A   255    ;   44			if (isdigit(c))
                           A   256    .LINE 44
                           A   257    
04087A DD07FD              A   258    	LD	BC,(IX+%FFFFFFFD)
04087D C5                  A   259    	PUSH	BC
04087E DD77E9              A   260    	LD	(IX+%FFFFFFE9),A
040881 CD E2 10 04         A   261    	CALL	_isdigit
040885 DD7EE9              A   262    	LD	A,(IX+%FFFFFFE9)
040888 C1                  A   263    	POP	BC
040889 CD B2 10 04         A   264    	CALL	__icmpzero
04088D 28 0B               A   265    	JR	Z,L_15
                           A   266    ;   45				c -= '0';
                           A   267    .LINE 45
                           A   268    
04088F DD31FD              A   269    	LD	IY,(IX+%FFFFFFFD)
040892 ED33D0              A   270    	LEA	IY,IY+%FFFFFFD0
040895 DD3EFD              A   271    	LD	(IX+%FFFFFFFD),IY
                           A   272    ;   46			else if (isalpha(c))
                           A   273    .LINE 46
                           A   274    
040898 18 48               A   275    	JR	L_19
04089A                     A   276    L_15:
04089A DD07FD              A   277    	LD	BC,(IX+%FFFFFFFD)
04089D C5                  A   278    	PUSH	BC
04089E DD77E9              A   279    	LD	(IX+%FFFFFFE9),A
0408A1 CD EC 12 04         A   280    	CALL	_isalpha
0408A5 DD7EE9              A   281    	LD	A,(IX+%FFFFFFE9)
0408A8 C1                  A   282    	POP	BC
0408A9 CD B2 10 04         A   283    	CALL	__icmpzero
0408AD CA 3F 09 04         A   284    	JR	Z,L_24
                           A   285    ;   47				c -= isupper(c) ? 'A' - 10 
                           A   286    .LINE 47
                           A   287    
0408B1 DD07FD              A   288    	LD	BC,(IX+%FFFFFFFD)
0408B4 C5                  A   289    	PUSH	BC
0408B5 DD77E9              A   290    	LD	(IX+%FFFFFFE9),A
0408B8 CD 69 0B 04         A   291    	CALL	_isupper
0408BC DD7EE9              A   292    	LD	A,(IX+%FFFFFFE9)
0408BF C1                  A   293    	POP	BC
0408C0 CD B2 10 04         A   294    	CALL	__icmpzero
0408C4 28 09               A   295    	JR	Z,L_10
0408C6 01370000            A   296    	LD	BC,55
0408CA DD0FF0              A   297    	LD	(IX+%FFFFFFF0),BC
0408CD 18 07               A   298    	JR	L_11
0408CF                     A   299    L_10:
0408CF 01570000            A   300    	LD	BC,87
0408D3 DD0FF0              A   301    	LD	(IX+%FFFFFFF0),BC
0408D6                     A   302    L_11:
0408D6 DD07F0              A   303    	LD	BC,(IX+%FFFFFFF0)
0408D9 DD27FD              A   304    	LD	HL,(IX+%FFFFFFFD)
0408DC B7                  A   305    	OR	A,A
0408DD ED42                A   306    	SBC	HL,BC
0408DF DD2FFD              A   307    	LD	(IX+%FFFFFFFD),HL
                           A   308    ;   48			else
                           A   309    .LINE 48
                           A   310    
                           A   311    ;   49				break;
                           A   312    .LINE 49
                           A   313    
0408E2                     A   314    L_19:
                           A   315    ;   50			if (c >= 16)
                           A   316    .LINE 50
                           A   317    
0408E2 01100000            A   318    	LD	BC,16
0408E6 DD27FD              A   319    	LD	HL,(IX+%FFFFFFFD)
0408E9 B7                  A   320    	OR	A,A
0408EA ED42                A   321    	SBC	HL,BC
0408EC CD 5A 0B 04         A   322    	CALL	__setflag
0408F0 F2 3F 09 04         A   323    	JP	P,L_24
                           A   324    ;   51				break;
                           A   325    ;   52			else {
                           A   326    ;   53				acc *= 16;
                           A   327    .LINE 53
                           A   328    
0408F4 DD27F6              A   329    	LD	HL,(IX+%FFFFFFF6)
0408F7 DD5EF9              A   330    	LD	E,(IX+%FFFFFFF9)
0408FA AF                  A   331    	XOR	A,A
0408FB CD 1F 16 04         A   332    	CALL	__lmulu
0408FF DD2FF6              A   333    	LD	(IX+%FFFFFFF6),HL
040902 DD73F9              A   334    	LD	(IX+%FFFFFFF9),E
                           A   335    ;   54				acc += c;
                           A   336    .LINE 54
                           A   337    
040905 DD07FD              A   338    	LD	BC,(IX+%FFFFFFFD)
040908 CD B1 13 04         A   339    	CALL	__itol
04090C DD27F6              A   340    	LD	HL,(IX+%FFFFFFF6)
04090F DD5EF9              A   341    	LD	E,(IX+%FFFFFFF9)
040912 CD 54 0B 04         A   342    	CALL	__ladd
040916 DD2FF6              A   343    	LD	(IX+%FFFFFFF6),HL
040919 DD73F9              A   344    	LD	(IX+%FFFFFFF9),E
                           A   345    ;   55				digits++;
                           A   346    .LINE 55
                           A   347    
04091C DD07F3              A   348    	LD	BC,(IX+%FFFFFFF3)
04091F 03                  A   349    	INC	BC
040920 DD0FF3              A   350    	LD	(IX+%FFFFFFF3),BC
040923 DD07FA              A   351    	LD	BC,(IX+%FFFFFFFA)
040926 DD0FEA              A   352    	LD	(IX+%FFFFFFEA),BC
040929 C5E1                A   353    	LD	HL,BC
04092B 7E                  A   354    	LD	A,(HL)
04092C 47                  A   355    	LD	B,A
04092D 17ED62              A   356    	SEXT	HL
040930 68                  A   357    	LD	L,B
040931 DD2FFD              A   358    	LD	(IX+%FFFFFFFD),HL
040934 DD07FA              A   359    	LD	BC,(IX+%FFFFFFFA)
040937 03                  A   360    	INC	BC
040938 DD0FFA              A   361    	LD	(IX+%FFFFFFFA),BC
                           A   362    ;   56			}
                           A   363    ;   57		}
                           A   364    .LINE 57
                           A   365    
04093B C3 7A 08 04         A   366    	JR	L_20
04093F                     A   367    L_24:
                           A   368    ;   58		if(digits > 8) errno = ERANGE;
                           A   369    .LINE 58
                           A   370    
04093F DD07F3              A   371    	LD	BC,(IX+%FFFFFFF3)
040942 21080000            A   372    	LD	HL,8
040946 B7                  A   373    	OR	A,A
040947 ED42                A   374    	SBC	HL,BC
040949 CD 5A 0B 04         A   375    	CALL	__setflag
04094D F2 5A 09 04         A   376    	JP	P,L_25
040951 01050000            A   377    	LD	BC,5
040955 ED43 45 1A 04       A   378    	LD	(_errno),BC
04095A                     A   379    L_25:
                           A   380    ;   59		return (acc);
                           A   381    .LINE 59
                           A   382    
04095A DD27F6              A   383    	LD	HL,(IX+%FFFFFFF6)
04095D DD5EF9              A   384    	LD	E,(IX+%FFFFFFF9)
                           A   385    ;   60	}
                           A   386    .LINE 60
                           A   387    
040960 DDF9                A   388    	LD	SP,IX
040962 DDE1                A   389    	POP	IX
040964 C9                  A   390    	RET	
                           A   391    
                           A   392    
                           A   393    ;**************************** _strtoll ********
                           A   394    ;Name                         Addr/Register   S
                           A   395    ;_errno                              IMPORT    
                           A   396    ;_isupper                            IMPORT  --
                           A   397    ;_isalpha                            IMPORT  --
                           A   398    ;_isdigit                            IMPORT  --
                           A   399    ;_isspace                            IMPORT  --
                           A   400    ;temp8                                IX-16    
                           A   401    ;digits                               IX-13    
                           A   402    ;acc                                  IX-10    
                           A   403    ;s                                     IX-6    
                           A   404    ;c                                     IX-3    
                           A   405    ;nptr                                  IX+6    
                           A   406    
                           A   407    
                           A   408    ; Stack Frame Size: 32 (bytes)
                           A   409    ;       Spill Code: 0 (instruction)
                           A   410    
                           A   411    
                           A   412    .ENDFUNC "strtoll",60,"_strtoll"
                           A   413    ;   61	
                           A   414    ;   62	
                           A   415    ;   63	// Calculate a CRC32 over a block of me
                           A   416    ;   64	// Parameters:
                           A   417    ;   65	// - s: Pointer to a memory location
                           A   418    ;   66	// - length: Size of memoryblock in byt
                           A   419    ;   67	UINT32 crc32(const char *s, UINT24 leng
                           A   420    ;   68	{
040965                     A   421    _crc32:
                           A   422    .DEFINE "_crc32"
                           A   423    
                           A   424    .VALUE _crc32
                           A   425    
                           A   426    .CLASS 2
                           A   427    
                           A   428    .TYPE 79
                           A   429    
                           A   430    .ENDEF
                           A   431    
                           A   432    .BEGFUNC "crc32",68,"_crc32"
                           A   433    
                           A   434    .LINE 68
                           A   435    
                           A   436    .DEFINE "s"
                           A   437    
                           A   438    .CLASS 65
                           A   439    
                           A   440    .VALUE 6
                           A   441    
                           A   442    .TYPE 194
                           A   443    
                           A   444    .ENDEF
                           A   445    
                           A   446    .DEFINE "length"
                           A   447    
                           A   448    .CLASS 65
                           A   449    
                           A   450    .VALUE 9
                           A   451    
                           A   452    .TYPE 14
                           A   453    
                           A   454    .ENDEF
                           A   455    
                           A   456    .DEFINE "i"
                           A   457    
                           A   458    .CLASS 65
                           A   459    
                           A   460    .VALUE -4
                           A   461    
                           A   462    .TYPE 15
                           A   463    
                           A   464    .ENDEF
                           A   465    
                           A   466    .DEFINE "j"
                           A   467    
                           A   468    .CLASS 65
                           A   469    
                           A   470    .VALUE -8
                           A   471    
                           A   472    .TYPE 15
                           A   473    
                           A   474    .ENDEF
                           A   475    
                           A   476    .DEFINE "ch"
                           A   477    
                           A   478    .CLASS 65
                           A   479    
                           A   480    .VALUE -9
                           A   481    
                           A   482    .TYPE 2
                           A   483    
                           A   484    .ENDEF
                           A   485    
                           A   486    .DEFINE "ch"
                           A   487    
                           A   488    .CLASS 65
                           A   489    
                           A   490    .VALUE -13
                           A   491    
                           A   492    .TYPE 15
                           A   493    
                           A   494    .ENDEF
                           A   495    
                           A   496    .DEFINE "b"
                           A   497    
                           A   498    .CLASS 65
                           A   499    
                           A   500    .VALUE -17
                           A   501    
                           A   502    .TYPE 15
                           A   503    
                           A   504    .ENDEF
                           A   505    
                           A   506    .DEFINE "t"
                           A   507    
                           A   508    .CLASS 65
                           A   509    
                           A   510    .VALUE -21
                           A   511    
                           A   512    .TYPE 15
                           A   513    
                           A   514    .ENDEF
                           A   515    
                           A   516    ;   69	  static UINT32 crc;
                           A   517    .LINE 69
                           A   518    
                           A   519    .DEFINE "crc"
                           A   520    
                           A   521    .ALIAS "_0crc"
                           A   522    
                           A   523    .CLASS 83
                           A   524    
                           A   525    .VALUE _0crc
                           A   526    
                           A   527    .TYPE 15
                           A   528    
                           A   529    .ENDEF
                           A   530    
                           A   531    ;   70	  static UINT32 crc32_table[256];
                           A   532    .LINE 70
                           A   533    
                           A   534    .DEFINE "crc32_table"
                           A   535    
                           A   536    .ALIAS "_1crc32_table"
                           A   537    
                           A   538    .CLASS 83
                           A   539    
                           A   540    .VALUE _1crc32_table
                           A   541    
                           A   542    .DIM 256
                           A   543    
                           A   544    .TYPE 111
                           A   545    
                           A   546    .ENDEF
                           A   547    
040965 DDE5                A   548    	PUSH	IX
040967 DD210000 00         A   549    	LD	IX,0
04096C DD39                A   550    	ADD	IX,SP
04096E ED22EA              A   551    	LEA	HL,IX+%FFFFFFEA
040971 F9                  A   552    	LD	SP,HL
                           A   553    ;   71	  UINT32 i,ch,j,b,t; 
                           A   554    ;   72	
                           A   555    ;   73	  // init a crc32 lookup table, fastest
                           A   556    ;   74	  for(i = 0; i < 256; i++)
                           A   557    .LINE 74
                           A   558    
040972 01000000            A   559    	LD	BC,0
040976 AF                  A   560    	XOR	A,A
040977 DD0FFC              A   561    	LD	(IX+%FFFFFFFC),BC
04097A DD77FF              A   562    	LD	(IX+%FFFFFFFF),A
04097D C3 74 0A 04         A   563    	JR	L_37
040981                     A   564    L_35:
                           A   565    ;   75	  {
                           A   566    ;   76	    ch = i;
                           A   567    .LINE 76
                           A   568    
040981 DD07FC              A   569    	LD	BC,(IX+%FFFFFFFC)
040984 DD7EFF              A   570    	LD	A,(IX+%FFFFFFFF)
040987 DD0FF3              A   571    	LD	(IX+%FFFFFFF3),BC
04098A DD77F6              A   572    	LD	(IX+%FFFFFFF6),A
                           A   573    ;   77	    crc = 0;
                           A   574    .LINE 77
                           A   575    
04098D 01000000            A   576    	LD	BC,0
040991 AF                  A   577    	XOR	A,A
040992 ED43 48 1A 04       A   578    	LD	(_0crc),BC
040997 32 4B 1A 04         A   579    	LD	(_0crc+3),A
                           A   580    ;   78	    for(j = 0; j < 8; j++)
                           A   581    .LINE 78
                           A   582    
04099B AF                  A   583    	XOR	A,A
04099C DD0FF8              A   584    	LD	(IX+%FFFFFFF8),BC
04099F DD77FB              A   585    	LD	(IX+%FFFFFFFB),A
0409A2 C3 2C 0A 04         A   586    	JR	L_33
0409A6                     A   587    L_31:
                           A   588    ;   79	    {
                           A   589    ;   80		  b=(ch^crc)&1;
                           A   590    .LINE 80
                           A   591    
0409A6 2A 48 1A 04         A   592    	LD	HL,(_0crc)
0409AA 3A 4B 1A 04         A   593    	LD	A,(_0crc+3)
0409AE 5F                  A   594    	LD	E,A
0409AF DD07F3              A   595    	LD	BC,(IX+%FFFFFFF3)
0409B2 DD7EF6              A   596    	LD	A,(IX+%FFFFFFF6)
0409B5 CD BE 10 04         A   597    	CALL	__lxor
0409B9 E5C1                A   598    	LD	BC,HL
0409BB 79                  A   599    	LD	A,C
0409BC E601                A   600    	AND	A,%1
0409BE B7ED62              A   601    	UEXT	HL
0409C1 6F                  A   602    	LD	L,A
0409C2 DD2FEF              A   603    	LD	(IX+%FFFFFFEF),HL
0409C5 DD74F2              A   604    	LD	(IX+%FFFFFFF2),H
                           A   605    ;   81		  crc>>=1;
                           A   606    .LINE 81
                           A   607    
0409C8 ED4B 48 1A 04       A   608    	LD	BC,(_0crc)
0409CD 3A 4B 1A 04         A   609    	LD	A,(_0crc+3)
0409D1 2E01                A   610    	LD	L,%1
0409D3 CD 90 10 04         A   611    	CALL	__lshru
0409D7 ED43 48 1A 04       A   612    	LD	(_0crc),BC
0409DC 32 4B 1A 04         A   613    	LD	(_0crc+3),A
                           A   614    ;   82		  if(b) crc=crc^0xEDB88320;
                           A   615    .LINE 82
                           A   616    
0409E0 DD27EF              A   617    	LD	HL,(IX+%FFFFFFEF)
0409E3 DD5EF2              A   618    	LD	E,(IX+%FFFFFFF2)
0409E6 CD 83 0D 04         A   619    	CALL	__lcmpzero
0409EA 28 1C               A   620    	JR	Z,L_30
0409EC 2A 48 1A 04         A   621    	LD	HL,(_0crc)
0409F0 3A 4B 1A 04         A   622    	LD	A,(_0crc+3)
0409F4 5F                  A   623    	LD	E,A
0409F5 012083B8            A   624    	LD	BC,12092192
0409F9 3EED                A   625    	LD	A,%ED
0409FB CD BE 10 04         A   626    	CALL	__lxor
0409FF 22 48 1A 04         A   627    	LD	(_0crc),HL
040A03 7B                  A   628    	LD	A,E
040A04 32 4B 1A 04         A   629    	LD	(_0crc+3),A
040A08                     A   630    L_30:
                           A   631    ;   83		  ch>>=1;
                           A   632    .LINE 83
                           A   633    
040A08 DD07F3              A   634    	LD	BC,(IX+%FFFFFFF3)
040A0B DD7EF6              A   635    	LD	A,(IX+%FFFFFFF6)
040A0E 2E01                A   636    	LD	L,%1
040A10 CD 90 10 04         A   637    	CALL	__lshru
040A14 DD0FF3              A   638    	LD	(IX+%FFFFFFF3),BC
040A17 DD77F6              A   639    	LD	(IX+%FFFFFFF6),A
040A1A DD27F8              A   640    	LD	HL,(IX+%FFFFFFF8)
040A1D DD5EFB              A   641    	LD	E,(IX+%FFFFFFFB)
040A20 3E01                A   642    	LD	A,%1
040A22 CD 45 0B 04         A   643    	CALL	__ladd_b
040A26 DD2FF8              A   644    	LD	(IX+%FFFFFFF8),HL
040A29 DD73FB              A   645    	LD	(IX+%FFFFFFFB),E
                           A   646    ;   84	    }
040A2C                     A   647    L_33:
                           A   648    .LINE 84
                           A   649    
040A2C DD27F8              A   650    	LD	HL,(IX+%FFFFFFF8)
040A2F DD5EFB              A   651    	LD	E,(IX+%FFFFFFFB)
040A32 01080000            A   652    	LD	BC,8
040A36 AF                  A   653    	XOR	A,A
040A37 CD FB 13 04         A   654    	CALL	__lcmpu
040A3B DA A6 09 04         A   655    	JR	C,L_31
                           A   656    ;   85	    crc32_table[i] = crc;
                           A   657    .LINE 85
                           A   658    
040A3F DD27FC              A   659    	LD	HL,(IX+%FFFFFFFC)
040A42 DD5EFF              A   660    	LD	E,(IX+%FFFFFFFF)
040A45 01040000            A   661    	LD	BC,4
040A49 AF                  A   662    	XOR	A,A
040A4A CD 1F 16 04         A   663    	CALL	__lmulu
040A4E 01 4C 1A 04         A   664    	LD	BC,_1crc32_table
040A52 09                  A   665    	ADD	HL,BC
040A53 ED4B 48 1A 04       A   666    	LD	BC,(_0crc)
040A58 3A 4B 1A 04         A   667    	LD	A,(_0crc+3)
040A5C ED0F                A   668    	LD	(HL),BC
040A5E 23                  A   669    	INC	HL
040A5F 23                  A   670    	INC	HL
040A60 23                  A   671    	INC	HL
040A61 77                  A   672    	LD	(HL),A
040A62 DD27FC              A   673    	LD	HL,(IX+%FFFFFFFC)
040A65 DD5EFF              A   674    	LD	E,(IX+%FFFFFFFF)
040A68 3E01                A   675    	LD	A,%1
040A6A CD 45 0B 04         A   676    	CALL	__ladd_b
040A6E DD2FFC              A   677    	LD	(IX+%FFFFFFFC),HL
040A71 DD73FF              A   678    	LD	(IX+%FFFFFFFF),E
                           A   679    ;   86	  }        
040A74                     A   680    L_37:
                           A   681    .LINE 86
                           A   682    
040A74 DD27FC              A   683    	LD	HL,(IX+%FFFFFFFC)
040A77 DD5EFF              A   684    	LD	E,(IX+%FFFFFFFF)
040A7A 01000100            A   685    	LD	BC,256
040A7E AF                  A   686    	XOR	A,A
040A7F CD FB 13 04         A   687    	CALL	__lcmpu
040A83 DA 81 09 04         A   688    	JR	C,L_35
                           A   689    ;   87	
                           A   690    ;   88	  // calculate the crc using the table
                           A   691    ;   89	  crc = 0xFFFFFFFF;
                           A   692    .LINE 89
                           A   693    
040A87 01FFFFFF            A   694    	LD	BC,16777215
040A8B 3EFF                A   695    	LD	A,%FF
040A8D ED43 48 1A 04       A   696    	LD	(_0crc),BC
040A92 32 4B 1A 04         A   697    	LD	(_0crc+3),A
                           A   698    ;   90	  for(i=0;i<length;i++)
                           A   699    .LINE 90
                           A   700    
040A96 01000000            A   701    	LD	BC,0
040A9A AF                  A   702    	XOR	A,A
040A9B DD0FFC              A   703    	LD	(IX+%FFFFFFFC),BC
040A9E DD77FF              A   704    	LD	(IX+%FFFFFFFF),A
040AA1 18 7D               A   705    	JR	L_42
040AA3                     A   706    L_40:
                           A   707    ;   91	  {
                           A   708    ;   92	    char ch=s[i];
                           A   709    .LINE 92
                           A   710    
040AA3 DD07FC              A   711    	LD	BC,(IX+%FFFFFFFC)
040AA6 DD2706              A   712    	LD	HL,(IX+%6)
040AA9 09                  A   713    	ADD	HL,BC
040AAA 7E                  A   714    	LD	A,(HL)
040AAB DD77F7              A   715    	LD	(IX+%FFFFFFF7),A
                           A   716    ;   93	    t=(ch^crc)&0xFF;
                           A   717    .LINE 93
                           A   718    
040AAE 17ED62              A   719    	SEXT	HL
040AB1 DD6EF7              A   720    	LD	L,(IX+%FFFFFFF7)
040AB4 E5C1                A   721    	LD	BC,HL
040AB6 DD74EA              A   722    	LD	(IX+%FFFFFFEA),H
040AB9 2A 48 1A 04         A   723    	LD	HL,(_0crc)
040ABD 3A 4B 1A 04         A   724    	LD	A,(_0crc+3)
040AC1 5F                  A   725    	LD	E,A
040AC2 DD7EEA              A   726    	LD	A,(IX+%FFFFFFEA)
040AC5 CD BE 10 04         A   727    	CALL	__lxor
040AC9 E5C1                A   728    	LD	BC,HL
040ACB B7ED62              A   729    	UEXT	HL
040ACE 69                  A   730    	LD	L,C
040ACF DD2FEB              A   731    	LD	(IX+%FFFFFFEB),HL
040AD2 DD74EE              A   732    	LD	(IX+%FFFFFFEE),H
                           A   733    ;   94	    crc=(crc>>8)^crc32_table[t];
                           A   734    .LINE 94
                           A   735    
040AD5 DD27EB              A   736    	LD	HL,(IX+%FFFFFFEB)
040AD8 DD5EEE              A   737    	LD	E,(IX+%FFFFFFEE)
040ADB 01040000            A   738    	LD	BC,4
040ADF AF                  A   739    	XOR	A,A
040AE0 CD 1F 16 04         A   740    	CALL	__lmulu
040AE4 01 4C 1A 04         A   741    	LD	BC,_1crc32_table
040AE8 09                  A   742    	ADD	HL,BC
040AE9 E5FDE1              A   743    	LD	IY,HL
040AEC ED4B 48 1A 04       A   744    	LD	BC,(_0crc)
040AF1 3A 4B 1A 04         A   745    	LD	A,(_0crc+3)
040AF5 2E08                A   746    	LD	L,%8
040AF7 CD 90 10 04         A   747    	CALL	__lshru
040AFB FD2700              A   748    	LD	HL,(IY)
040AFE FD5E03              A   749    	LD	E,(IY+%3)
040B01 CD BE 10 04         A   750    	CALL	__lxor
040B05 22 48 1A 04         A   751    	LD	(_0crc),HL
040B09 7B                  A   752    	LD	A,E
040B0A 32 4B 1A 04         A   753    	LD	(_0crc+3),A
040B0E DD27FC              A   754    	LD	HL,(IX+%FFFFFFFC)
040B11 DD5EFF              A   755    	LD	E,(IX+%FFFFFFFF)
040B14 3E01                A   756    	LD	A,%1
040B16 CD 45 0B 04         A   757    	CALL	__ladd_b
040B1A DD2FFC              A   758    	LD	(IX+%FFFFFFFC),HL
040B1D DD73FF              A   759    	LD	(IX+%FFFFFFFF),E
                           A   760    ;   95	  }
040B20                     A   761    L_42:
                           A   762    .LINE 95
                           A   763    
040B20 DD0709              A   764    	LD	BC,(IX+%9)
040B23 AF                  A   765    	XOR	A,A
040B24 DD27FC              A   766    	LD	HL,(IX+%FFFFFFFC)
040B27 DD5EFF              A   767    	LD	E,(IX+%FFFFFFFF)
040B2A CD FB 13 04         A   768    	CALL	__lcmpu
040B2E DA A3 0A 04         A   769    	JR	C,L_40
                           A   770    ;   96	
                           A   771    ;   97	  return ~crc;
                           A   772    .LINE 97
                           A   773    
040B32 2A 48 1A 04         A   774    	LD	HL,(_0crc)
040B36 3A 4B 1A 04         A   775    	LD	A,(_0crc+3)
040B3A 5F                  A   776    	LD	E,A
040B3B CD 69 14 04         A   777    	CALL	__lnot
                           A   778    ;   98	}
                           A   779    .LINE 98
                           A   780    
040B3F DDF9                A   781    	LD	SP,IX
040B41 DDE1                A   782    	POP	IX
040B43 C9                  A   783    	RET	
                           A   784    
                           A   785    
                           A   786    ;**************************** _crc32 **********
                           A   787    ;Name                         Addr/Register   S
                           A   788    ;_1crc32_table                       STATIC   1
                           A   789    ;_0crc                               STATIC    
                           A   790    ;t                                    IX-21    
                           A   791    ;b                                    IX-17    
                           A   792    ;ch                                   IX-13    
                           A   793    ;ch                                    IX-9    
                           A   794    ;j                                     IX-8    
                           A   795    ;i                                     IX-4    
                           A   796    ;length                                IX+9    
                           A   797    ;s                                     IX+6    
                           A   798    
                           A   799    
                           A   800    ; Stack Frame Size: 34 (bytes)
                           A   801    ;       Spill Code: 0 (instruction)
                           A   802    
                           A   803    
                           A   804    .ENDFUNC "crc32",98,"_crc32"
                           A   805    	SEGMENT BSS
041A48                     A   806    _0crc:
041A48                     A   807    	DS	4*1
041A4C                     A   808    _1crc32_table:
041A4C                     A   809    	DS	1024
                           A   810    	XREF _errno:ROM
                           A   811    	XREF _isupper:ROM
                           A   812    	XREF _isspace:ROM
                           A   813    	XREF _isdigit:ROM
                           A   814    	XREF _isalpha:ROM
                           A   815    	XREF __lcmpu:ROM
                           A   816    	XREF __ladd:ROM
                           A   817    	XREF __lmulu:ROM
                           A   818    	XREF __lnot:ROM
                           A   819    	XREF __lxor:ROM
                           A   820    	XREF __lshru:ROM
                           A   821    	XREF __itol:ROM
                           A   822    	XREF __setflag:ROM
                           A   823    	XREF __icmpzero:ROM
                           A   824    	XREF __lcmpzero:ROM
                           A   825    	XREF __ladd_b:ROM
                           A   826    	XDEF _crc32
                           A   827    	XDEF _strtoll
                           A   828    	END


Errors: 0
Warnings: 0
Lines Assembled: 829
